-- ***************************************************************** 
--                                                                   
-- IBM Confidential                                                  
--                                                                   
-- OCO Source Materials                                              
--                                                                   
-- Copyright IBM Corp. 2012, 2014                        
--                                                                   
-- The source code for this program is not published or otherwise    
-- divested of its trade secrets, irrespective of what has been      
-- deposited with the U.S. Copyright Office.                         
--                                                                   
-- ***************************************************************** 

--CONNECT TO SNCOMM;

delete from CALENDAR.CA_DELETION_HISTORY;
commit;

delete from CALENDAR.CA_EVENTTAGAGG where CALENDAR_UUID is null;
commit;

update CALENDAR.CA_CALENDAR set ORG_ID = ' ' where ORG_ID is null or ORG_ID = '';
commit;

alter table CALENDAR.CA_EVENTTAGAGG alter column CALENDAR_UUID set not null;
--REORG TABLE CALENDAR.CA_EVENTTAGAGG	USE CATMPTABSPACE;
commit;

alter table CALENDAR.CA_CALENDAR alter column ORG_ID set not null;
--REORG TABLE CALENDAR.CA_CALENDAR USE CATMPTABSPACE;
commit;

-- add CALENDAR_UUID column to CA_DELETION_HISTORY table
alter table CALENDAR.CA_DELETION_HISTORY add column CALENDAR_UUID varchar(36) CCSID 1208 not null default '';
commit;

-- add ORG_ID column for all tables
alter table CALENDAR.CA_MEMBERSHIP add column ORG_ID varchar(36) CCSID 1208 default ' ' not null;
alter table CALENDAR.CA_EVENT add column ORG_ID varchar(36) CCSID 1208 default ' ' not null;
alter table CALENDAR.CA_EVENTINSTANCE add column ORG_ID varchar(36) CCSID 1208 default ' ' not null;
alter table CALENDAR.CA_SUBSTITUTION add column ORG_ID varchar(36) CCSID 1208 default ' ' not null;
alter table CALENDAR.CA_RECURRENCE add column ORG_ID varchar(36) CCSID 1208 default ' ' not null;
alter table CALENDAR.CA_EVENTINFO add column ORG_ID varchar(36) CCSID 1208 default ' ' not null;
alter table CALENDAR.CA_EVENTTAG add column ORG_ID varchar(36) CCSID 1208 default ' ' not null;
alter table CALENDAR.CA_EVENTTAGAGG add column ORG_ID varchar(36) CCSID 1208 default ' ' not null;
alter table CALENDAR.CA_EVENTCOMMENT add column ORG_ID varchar(36) CCSID 1208 default ' ' not null;
alter table CALENDAR.CA_EVENTFOLLOWING add column ORG_ID varchar(36) CCSID 1208 default ' ' not null;
alter table CALENDAR.CA_DELETION_HISTORY add column ORG_ID varchar(36) CCSID 1208 default ' ' not null;
commit;

-- migrate ORG_ID data to all tables

--EXPORT TO "update_membership_orgid.ixf" OF IXF MESSAGES "update_membership_orgid.out"
--SELECT t.CALENDAR_UUID, t.MEMBER_UUID, cal.ORG_ID from CALENDAR.CA_CALENDAR cal, CALENDAR.CA_MEMBERSHIP t where cal.CALENDAR_UUID = t.CALENDAR_UUID;

--IMPORT from "update_membership_orgid.ixf" of IXF COMMITCOUNT 1000 messages msgout INSERT_UPDATE into CALENDAR.CA_MEMBERSHIP (CALENDAR_UUID, MEMBER_UUID, ORG_ID);
CREATE TABLE CALENDAR.update_membership_orgid(
	CALENDAR_UUID	VARCHAR(36) CCSID 1208	    NOT NULL,
	MEMBER_UUID		VARCHAR(36) CCSID 1208		NOT NULL,
	ORG_ID          VARCHAR(36) CCSID 1208     NOT NULL
);
INSERT INTO CALENDAR.update_membership_orgid (CALENDAR_UUID, MEMBER_UUID, ORG_ID) SELECT t.CALENDAR_UUID, t.MEMBER_UUID, cal.ORG_ID from CALENDAR.CA_CALENDAR cal, CALENDAR.CA_MEMBERSHIP t where cal.CALENDAR_UUID = t.CALENDAR_UUID;
UPDATE CALENDAR.CA_MEMBERSHIP t1 SET t1.ORG_ID =(select ORG_ID from CALENDAR.update_membership_orgid t2 WHERE t2.CALENDAR_UUID = t1.CALENDAR_UUID and t2.MEMBER_UUID = t1.MEMBER_UUID) WHERE t1.CALENDAR_UUID IN (SELECT CALENDAR_UUID FROM CALENDAR.update_membership_orgid);
DROP TABLE CALENDAR.update_membership_orgid;

--EXPORT TO "update_event_orgid.ixf" OF IXF MESSAGES "update_event_orgid.out"
--SELECT t.EVENT_UUID, cal.ORG_ID from CALENDAR.CA_CALENDAR cal, CALENDAR.CA_EVENT t where cal.CALENDAR_UUID = t.CALENDAR_UUID;

--IMPORT from "update_event_orgid.ixf" of IXF COMMITCOUNT 1000 messages msgout INSERT_UPDATE into CALENDAR.CA_EVENT (EVENT_UUID, ORG_ID);
CREATE TABLE CALENDAR.update_event_orgid(
	EVENT_UUID		VARCHAR(36) CCSID 1208	NOT NULL,
	ORG_ID          VARCHAR(36) CCSID 1208     NOT NULL
);
INSERT INTO CALENDAR.update_event_orgid (EVENT_UUID, ORG_ID) SELECT t.EVENT_UUID, cal.ORG_ID from CALENDAR.CA_CALENDAR cal, CALENDAR.CA_EVENT t where cal.CALENDAR_UUID = t.CALENDAR_UUID;
UPDATE CALENDAR.CA_EVENT t1 SET t1.ORG_ID = (select ORG_ID from CALENDAR.update_event_orgid t2 WHERE t2.EVENT_UUID = t1.EVENT_UUID) WHERE t1.EVENT_UUID IN (SELECT EVENT_UUID FROM CALENDAR.update_event_orgid);
DROP TABLE CALENDAR.update_event_orgid;

--EXPORT TO "update_eventinstance_orgid.ixf" OF IXF MESSAGES "update_eventinstance_orgid.out"
--SELECT t.EVENTINST_UUID, cal.ORG_ID from CALENDAR.CA_CALENDAR cal, CALENDAR.CA_EVENTINSTANCE t where cal.CALENDAR_UUID = t.CALENDAR_UUID;

--IMPORT from "update_eventinstance_orgid.ixf" of IXF COMMITCOUNT 1000 messages msgout INSERT_UPDATE into CALENDAR.CA_EVENTINSTANCE (EVENTINST_UUID, ORG_ID);
CREATE TABLE CALENDAR.update_eventinstance_orgid(
	EVENTINST_UUID		VARCHAR(36) CCSID 1208	NOT NULL,
	ORG_ID          VARCHAR(36) CCSID 1208     NOT NULL
);
INSERT INTO CALENDAR.update_eventinstance_orgid (EVENTINST_UUID, ORG_ID) SELECT t.EVENTINST_UUID, cal.ORG_ID from CALENDAR.CA_CALENDAR cal, CALENDAR.CA_EVENTINSTANCE t where cal.CALENDAR_UUID = t.CALENDAR_UUID;
UPDATE CALENDAR.CA_EVENTINSTANCE t1 SET t1.ORG_ID = (select ORG_ID from CALENDAR.update_eventinstance_orgid t2 WHERE t2.EVENTINST_UUID = t1.EVENTINST_UUID) WHERE t1.EVENTINST_UUID IN (SELECT EVENTINST_UUID FROM CALENDAR.update_eventinstance_orgid);
DROP TABLE CALENDAR.update_eventinstance_orgid;

--EXPORT TO "update_substitution_orgid.ixf" OF IXF MESSAGES "update_substitution_orgid.out"
--SELECT t.SUBSTITUTION_UUID, cal.ORG_ID from CALENDAR.CA_CALENDAR cal, CALENDAR.CA_SUBSTITUTION t where cal.CALENDAR_UUID = t.CALENDAR_UUID;

--IMPORT from "update_substitution_orgid.ixf" of IXF COMMITCOUNT 1000 messages msgout INSERT_UPDATE into CALENDAR.CA_SUBSTITUTION (SUBSTITUTION_UUID, ORG_ID);
CREATE TABLE CALENDAR.update_substitution_orgid(
	SUBSTITUTION_UUID		VARCHAR(36) CCSID 1208	NOT NULL,
	ORG_ID          VARCHAR(36) CCSID 1208     NOT NULL
);
INSERT INTO CALENDAR.update_substitution_orgid (SUBSTITUTION_UUID, ORG_ID) SELECT t.SUBSTITUTION_UUID, cal.ORG_ID from CALENDAR.CA_CALENDAR cal, CALENDAR.CA_SUBSTITUTION t where cal.CALENDAR_UUID = t.CALENDAR_UUID;
UPDATE CALENDAR.CA_SUBSTITUTION t1 SET t1.ORG_ID = (select ORG_ID from CALENDAR.update_substitution_orgid t2 WHERE t2.SUBSTITUTION_UUID = t1.SUBSTITUTION_UUID) WHERE t1.SUBSTITUTION_UUID IN (SELECT SUBSTITUTION_UUID FROM CALENDAR.update_substitution_orgid);
DROP TABLE CALENDAR.update_substitution_orgid;

--EXPORT TO "update_recurrence_orgid.ixf" OF IXF MESSAGES "update_recurrence_orgid.out"
--SELECT t.EVENT_UUID, cal.ORG_ID from CALENDAR.CA_CALENDAR cal, CALENDAR.CA_RECURRENCE t where cal.CALENDAR_UUID = t.CALENDAR_UUID;

--IMPORT from "update_recurrence_orgid.ixf" of IXF COMMITCOUNT 1000 messages msgout INSERT_UPDATE into CALENDAR.CA_RECURRENCE (EVENT_UUID, ORG_ID);
CREATE TABLE CALENDAR.update_recurrence_orgid(
	EVENT_UUID		VARCHAR(36) CCSID 1208	NOT NULL,
	ORG_ID          VARCHAR(36) CCSID 1208     NOT NULL
);
INSERT INTO CALENDAR.update_recurrence_orgid (EVENT_UUID, ORG_ID) SELECT t.EVENT_UUID, cal.ORG_ID from CALENDAR.CA_CALENDAR cal, CALENDAR.CA_RECURRENCE t where cal.CALENDAR_UUID = t.CALENDAR_UUID;
UPDATE CALENDAR.CA_RECURRENCE t1 SET t1.ORG_ID = (select ORG_ID from CALENDAR.update_recurrence_orgid t2 WHERE t2.EVENT_UUID = t1.EVENT_UUID) WHERE t1.EVENT_UUID IN (SELECT EVENT_UUID FROM CALENDAR.update_recurrence_orgid);
DROP TABLE CALENDAR.update_recurrence_orgid;

--EXPORT TO "update_eventinfo_orgid.ixf" OF IXF MESSAGES "update_eventinfo_orgid.out"
--SELECT t.EVENTINFO_UUID, cal.ORG_ID from CALENDAR.CA_CALENDAR cal, CALENDAR.CA_EVENTINFO t where cal.CALENDAR_UUID = t.CALENDAR_UUID;

--IMPORT from "update_eventinfo_orgid.ixf" of IXF COMMITCOUNT 1000 messages msgout INSERT_UPDATE into CALENDAR.CA_EVENTINFO (EVENTINFO_UUID, ORG_ID);
CREATE TABLE CALENDAR.update_eventinfo_orgid(
	EVENTINFO_UUID		VARCHAR(36) CCSID 1208	NOT NULL,
	ORG_ID          VARCHAR(36) CCSID 1208     NOT NULL
);
INSERT INTO CALENDAR.update_eventinfo_orgid (EVENTINFO_UUID, ORG_ID) SELECT t.EVENTINFO_UUID, cal.ORG_ID from CALENDAR.CA_CALENDAR cal, CALENDAR.CA_EVENTINFO t where cal.CALENDAR_UUID = t.CALENDAR_UUID;
UPDATE CALENDAR.CA_EVENTINFO t1 SET t1.ORG_ID = (select ORG_ID from CALENDAR.update_eventinfo_orgid t2 WHERE t2.EVENTINFO_UUID = t1.EVENTINFO_UUID) WHERE t1.EVENTINFO_UUID IN (SELECT EVENTINFO_UUID FROM CALENDAR.update_eventinfo_orgid);
DROP TABLE CALENDAR.update_eventinfo_orgid;

--EXPORT TO "update_eventtag_orgid.ixf" OF IXF MESSAGES "update_eventtag_orgid.out"
--SELECT t.TAG_UUID, cal.ORG_ID from CALENDAR.CA_CALENDAR cal, CALENDAR.CA_EVENTTAG t where cal.CALENDAR_UUID = t.CALENDAR_UUID;

--IMPORT from "update_eventtag_orgid.ixf" of IXF COMMITCOUNT 1000 messages msgout INSERT_UPDATE into CALENDAR.CA_EVENTTAG (TAG_UUID, ORG_ID);
CREATE TABLE CALENDAR.update_eventtag_orgid(
	TAG_UUID		VARCHAR(36) CCSID 1208	NOT NULL,
	ORG_ID          VARCHAR(36) CCSID 1208     NOT NULL
);
INSERT INTO CALENDAR.update_eventtag_orgid (TAG_UUID, ORG_ID) SELECT t.TAG_UUID, cal.ORG_ID from CALENDAR.CA_CALENDAR cal, CALENDAR.CA_EVENTTAG t where cal.CALENDAR_UUID = t.CALENDAR_UUID;
UPDATE CALENDAR.CA_EVENTTAG t1 SET t1.ORG_ID = (select ORG_ID from CALENDAR.update_eventtag_orgid t2 WHERE t2.TAG_UUID = t1.TAG_UUID) WHERE t1.TAG_UUID IN (SELECT TAG_UUID FROM CALENDAR.update_eventtag_orgid);
DROP TABLE CALENDAR.update_eventtag_orgid;

--EXPORT TO "update_eventcomment_orgid.ixf" OF IXF MESSAGES "update_eventcomment_orgid.out"
--SELECT t.COMMENT_UUID, cal.ORG_ID from CALENDAR.CA_CALENDAR cal, CALENDAR.CA_EVENTCOMMENT t where cal.CALENDAR_UUID = t.CALENDAR_UUID;

--IMPORT from "update_eventcomment_orgid.ixf" of IXF COMMITCOUNT 1000 messages msgout INSERT_UPDATE into CALENDAR.CA_EVENTCOMMENT (COMMENT_UUID, ORG_ID);
CREATE TABLE CALENDAR.update_eventcomment_orgid(
	COMMENT_UUID		VARCHAR(36) CCSID 1208	NOT NULL,
	ORG_ID          VARCHAR(36) CCSID 1208     NOT NULL
);
INSERT INTO CALENDAR.update_eventcomment_orgid (COMMENT_UUID, ORG_ID) SELECT t.COMMENT_UUID, cal.ORG_ID from CALENDAR.CA_CALENDAR cal, CALENDAR.CA_EVENTCOMMENT t where cal.CALENDAR_UUID = t.CALENDAR_UUID;
UPDATE CALENDAR.CA_EVENTCOMMENT t1 SET t1.ORG_ID = (select ORG_ID from CALENDAR.update_eventcomment_orgid t2 WHERE t2.COMMENT_UUID = t1.COMMENT_UUID) WHERE t1.COMMENT_UUID IN (SELECT COMMENT_UUID FROM CALENDAR.update_eventcomment_orgid);
DROP TABLE CALENDAR.update_eventcomment_orgid;

--EXPORT TO "update_eventfollowing_orgid.ixf" OF IXF MESSAGES "update_eventfollowing_orgid.out"
--SELECT t.EVFLW_UUID, cal.ORG_ID from CALENDAR.CA_CALENDAR cal, CALENDAR.CA_EVENTFOLLOWING t where cal.CALENDAR_UUID = t.CALENDAR_UUID;

--IMPORT from "update_eventfollowing_orgid.ixf" of IXF COMMITCOUNT 1000 messages msgout INSERT_UPDATE into CALENDAR.CA_EVENTFOLLOWING (EVFLW_UUID, ORG_ID);
CREATE TABLE CALENDAR.update_eventfollowing_orgid(
	EVFLW_UUID		VARCHAR(36) CCSID 1208	NOT NULL,
	ORG_ID          VARCHAR(36) CCSID 1208     NOT NULL
);
INSERT INTO CALENDAR.update_eventfollowing_orgid (EVFLW_UUID, ORG_ID) SELECT t.EVFLW_UUID, cal.ORG_ID from CALENDAR.CA_CALENDAR cal, CALENDAR.CA_EVENTFOLLOWING t where cal.CALENDAR_UUID = t.CALENDAR_UUID;
UPDATE CALENDAR.CA_EVENTFOLLOWING t1 SET t1.ORG_ID = (select ORG_ID from CALENDAR.update_eventfollowing_orgid t2 WHERE t2.EVFLW_UUID = t1.EVFLW_UUID);
DROP TABLE CALENDAR.update_eventfollowing_orgid;

-- drop index
drop index CALENDAR.CA_CAL_ACLMODTIME_IDX;
drop index CALENDAR.CA_CAL_VISIBILITY_IDX;
drop index CALENDAR.CA_EV_CALID_IDX;
drop index CALENDAR.CA_EV_USERID_IDX;
drop index CALENDAR.CA_EV_CALID_USERID_IDX;
drop index CALENDAR.CA_EV_MODITIME_IDX;
drop index CALENDAR.CA_EV_DBMODTIME_IDX;
drop index CALENDAR.CA_EVINST_CALID_EDSD_IDX;
drop index CALENDAR.CA_EVINST_CALID_EVID_IDX;
drop index CALENDAR.CA_EVINST_EVID_SD_IDX;
drop index CALENDAR.CA_EVINST_EVID_EDSD_IDX;
drop index CALENDAR.CA_EVINST_INST_EDSD_IDX;
drop index CALENDAR.CA_SUB_CALID_IDX;
drop index CALENDAR.CA_SUB_EVID_NSD_IDX;
drop index CALENDAR.CA_SUB_EVID_SD_IDX;
drop index CALENDAR.CA_SUB_MODITIME_IDX;
drop index CALENDAR.CA_RECUR_CALID_IDX;
drop index CALENDAR.CA_RECUR_MODITIME_IDX;
drop index CALENDAR.CA_EVINFO_CALID_IDX;
drop index CALENDAR.CA_EVINFO_EVID_IDX;
drop index CALENDAR.CA_EVTAG_EVID_IDX;
drop index CALENDAR.CA_EVTAG_CALID_IDX;
drop index CALENDAR.CA_EVTAG_NAME_IDX;
drop index CALENDAR.CA_EVTAG_NAME_EVID_IDX;
drop index CALENDAR.CA_EVTAGAGG_CALID_IDX;
drop index CALENDAR.CA_EVTAGAGG_CALID_NAME_IDX;
drop index CALENDAR.CA_EVCMT_EVID_IDX;
drop index CALENDAR.CA_EVFLW_CAID_IDX;
drop index CALENDAR.CA_EVFLW_EVID_IDX;
drop index CALENDAR.CA_EVFLW_EVITEM_IDX;
drop index CALENDAR.CA_EVFLW_USR_IDX;
drop index CALENDAR.CA_DELHIS_TIME_IDX;
commit;

-- drop primary key for all tables
alter table CALENDAR.CA_MEMBERSHIP drop primary key;
alter table CALENDAR.CA_CALENDAR drop primary key;
alter table CALENDAR.CA_RECURRENCE drop primary key;
alter table CALENDAR.CA_EVENT drop primary key;
alter table CALENDAR.CA_EVENTINSTANCE drop primary key;
alter table CALENDAR.CA_SUBSTITUTION drop primary key;
alter table CALENDAR.CA_EVENTINFO drop primary key;
alter table CALENDAR.CA_EVENTTAG drop primary key;
alter table CALENDAR.CA_EVENTTAGAGG drop primary key;
alter table CALENDAR.CA_EVENTCOMMENT drop primary key;
alter table CALENDAR.CA_EVENTFOLLOWING drop primary key;
alter table CALENDAR.CA_DELETION_HISTORY drop primary key;
commit;

-- recreate index
CREATE INDEX CALENDAR.CA_CAL_ACLMODTIME_IDX ON CALENDAR.CA_CALENDAR(ACLMODTIME, CREATEDON, ORG_ID);
CREATE INDEX CALENDAR.CA_CAL_VISIBILITY_IDX ON CALENDAR.CA_CALENDAR(CALENDAR_UUID, VISIBILITY, ORG_ID);
CREATE INDEX CALENDAR.CA_EV_CALID_IDX ON CALENDAR.CA_EVENT(CALENDAR_UUID, CREATEDON DESC, ORG_ID);
CREATE INDEX CALENDAR.CA_EV_USERID_IDX ON CALENDAR.CA_EVENT(CREATEDBY, CREATEDON DESC, ORG_ID);
CREATE INDEX CALENDAR.CA_EV_CALID_USERID_IDX ON CALENDAR.CA_EVENT(CALENDAR_UUID, CREATEDBY, CREATEDON DESC, ORG_ID);
CREATE INDEX CALENDAR.CA_EV_MODITIME_IDX ON CALENDAR.CA_EVENT(MODIFIEDON, ORG_ID);
CREATE INDEX CALENDAR.CA_EV_DBMODTIME_IDX ON CALENDAR.CA_EVENT(DBMODTIME, ORG_ID);
CREATE INDEX CALENDAR.CA_EVINST_CALID_EDSD_IDX ON CALENDAR.CA_EVENTINSTANCE(CALENDAR_UUID, ENDDATE, STARTDATE, ORG_ID);
CREATE INDEX CALENDAR.CA_EVINST_CALID_EVID_IDX ON CALENDAR.CA_EVENTINSTANCE(CALENDAR_UUID, EVENT_UUID, ORG_ID);
CREATE INDEX CALENDAR.CA_EVINST_EVID_SD_IDX ON CALENDAR.CA_EVENTINSTANCE(EVENT_UUID, STARTDATE, ORG_ID);
CREATE INDEX CALENDAR.CA_EVINST_EVID_EDSD_IDX ON CALENDAR.CA_EVENTINSTANCE(EVENT_UUID, ENDDATE DESC, STARTDATE, ORG_ID);
CREATE UNIQUE INDEX CALENDAR.CA_EVINST_INST_EDSD_IDX ON CALENDAR.CA_EVENTINSTANCE(EVENTINST_UUID, ENDDATE, STARTDATE, ORG_ID);
CREATE INDEX CALENDAR.CA_SUB_CALID_IDX ON CALENDAR.CA_SUBSTITUTION(CALENDAR_UUID, ORG_ID);
CREATE INDEX CALENDAR.CA_SUB_EVID_NSD_IDX ON CALENDAR.CA_SUBSTITUTION(EVENT_UUID, NEWSTARTDATE, ORG_ID);
CREATE INDEX CALENDAR.CA_SUB_EVID_SD_IDX ON CALENDAR.CA_SUBSTITUTION(EVENT_UUID, STARTDATE, ORG_ID);
CREATE INDEX CALENDAR.CA_SUB_MODITIME_IDX ON CALENDAR.CA_SUBSTITUTION(MODIFIEDON, EVENTINFO_UUID, ISCANCELLED, ORG_ID);
CREATE INDEX CALENDAR.CA_RECUR_CALID_IDX ON CALENDAR.CA_RECURRENCE(CALENDAR_UUID, ORG_ID);
CREATE INDEX CALENDAR.CA_RECUR_MODITIME_IDX ON CALENDAR.CA_RECURRENCE(MODIFIEDON, ORG_ID);
CREATE INDEX CALENDAR.CA_EVINFO_CALID_IDX ON CALENDAR.CA_EVENTINFO(CALENDAR_UUID, ORG_ID);
CREATE INDEX CALENDAR.CA_EVINFO_EVID_IDX ON CALENDAR.CA_EVENTINFO(EVENT_UUID, ORG_ID);
CREATE INDEX CALENDAR.CA_EVTAG_EVID_IDX ON CALENDAR.CA_EVENTTAG(EVENT_UUID, ORG_ID);
CREATE INDEX CALENDAR.CA_EVTAG_CALID_IDX ON CALENDAR.CA_EVENTTAG(CALENDAR_UUID, NAME, ORG_ID);
CREATE INDEX CALENDAR.CA_EVTAG_NAME_IDX ON CALENDAR.CA_EVENTTAG(NAME, CALENDAR_UUID, ORG_ID);
CREATE UNIQUE INDEX CALENDAR.CA_EVTAG_NAME_EVID_IDX ON CALENDAR.CA_EVENTTAG(NAME, EVENT_UUID, ORG_ID);
CREATE INDEX CALENDAR.CA_EVTAGAGG_CALID_IDX ON CALENDAR.CA_EVENTTAGAGG(CALENDAR_UUID, TOTAL, ORG_ID);
CREATE UNIQUE INDEX CALENDAR.CA_EVTAGAGG_CALID_NAME_IDX ON CALENDAR.CA_EVENTTAGAGG(CALENDAR_UUID, NAME, ORG_ID);
CREATE INDEX CALENDAR.CA_EVCMT_EVID_IDX ON CALENDAR.CA_EVENTCOMMENT(EVENT_UUID, ORG_ID);
CREATE INDEX CALENDAR.CA_EVFLW_CAID_IDX ON CALENDAR.CA_EVENTFOLLOWING(CALENDAR_UUID, ORG_ID);
CREATE INDEX CALENDAR.CA_EVFLW_EVID_IDX ON CALENDAR.CA_EVENTFOLLOWING(EVENT_UUID, ORG_ID);
CREATE UNIQUE INDEX CALENDAR.CA_EVFLW_EVITEM_IDX ON CALENDAR.CA_EVENTFOLLOWING(EVENTITEM_UUID, EVENTITEM_TYPE, USER_UUID, ORG_ID);
CREATE UNIQUE INDEX CALENDAR.CA_EVFLW_USR_IDX ON CALENDAR.CA_EVENTFOLLOWING(USER_UUID, ENDDATE, EVFLW_UUID, ORG_ID,FOLLOW, CALENDAR_UUID, EVENTITEM_UUID, EVENTITEM_TYPE);
CREATE INDEX CALENDAR.CA_DELHIS_TIME_IDX ON CALENDAR.CA_DELETION_HISTORY(DBMODTIME, ORG_ID);
commit;

-- recreate primary keys
ALTER TABLE CALENDAR.CA_MEMBERSHIP
ADD CONSTRAINT CALENDAR.CA_MEMBERSHIP_PK PRIMARY KEY (
	MEMBER_UUID, CALENDAR_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_CALENDAR
ADD CONSTRAINT CALENDAR.CA_CALENDAR_PK PRIMARY KEY (
	CALENDAR_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_RECURRENCE
ADD CONSTRAINT CALENDAR.CA_RECURRENCE_PK PRIMARY KEY (
	EVENT_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_EVENT
ADD CONSTRAINT CALENDAR.CA_EVENT_PK PRIMARY KEY (
	EVENT_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_EVENTINSTANCE
ADD CONSTRAINT CALENDAR.CA_EVENTINST_PK PRIMARY KEY (
	EVENTINST_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_SUBSTITUTION
ADD CONSTRAINT CALENDAR.CA_SUBSTITUTION_PK PRIMARY KEY (
	SUBSTITUTION_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_EVENTINFO
ADD CONSTRAINT CALENDAR.CA_EVENTINFO_PK PRIMARY KEY (
	EVENTINFO_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_EVENTTAG
ADD CONSTRAINT CALENDAR.CA_EVTAG_PK PRIMARY KEY (
	TAG_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_EVENTTAGAGG
ADD CONSTRAINT CALENDAR.CA_EVTAGAGG_PK PRIMARY KEY (
	TAGAGG_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_EVENTCOMMENT
ADD CONSTRAINT CALENDAR.CA_EVCMT_PK PRIMARY KEY (
	COMMENT_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_EVENTFOLLOWING
ADD CONSTRAINT CALENDAR.CA_EVFLW_PK PRIMARY KEY (
	EVFLW_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_DELETION_HISTORY
ADD CONSTRAINT CALENDAR.CA_DELHISTORY_PK PRIMARY KEY (
	DELHISTORY_UUID, ORG_ID
);

commit;

-- drop ORG_ID column default value
alter table CALENDAR.CA_MEMBERSHIP alter column ORG_ID drop default;
alter table CALENDAR.CA_EVENT alter column ORG_ID drop default;
alter table CALENDAR.CA_EVENTINSTANCE alter column ORG_ID drop default;
alter table CALENDAR.CA_SUBSTITUTION alter column ORG_ID drop default;
alter table CALENDAR.CA_RECURRENCE alter column ORG_ID drop default;
alter table CALENDAR.CA_EVENTINFO alter column ORG_ID drop default;
alter table CALENDAR.CA_EVENTTAG alter column ORG_ID drop default;
alter table CALENDAR.CA_EVENTTAGAGG alter column ORG_ID drop default;
alter table CALENDAR.CA_EVENTCOMMENT alter column ORG_ID drop default;
alter table CALENDAR.CA_EVENTFOLLOWING alter column ORG_ID drop default;
commit;

update CALENDAR.CA_SCHEMA set DBSCHEMAVER = '25', RELEASEVER = '4.5.0.0.0' where COMPKEY = 'CALENDAR';
commit;

--CONNECT RESET;
