-- ***************************************************************** 
--                                                                   
-- IBM Confidential                                                  
--                                                                   
-- OCO Source Materials                                              
--                                                                   
-- Copyright IBM Corp. 2011, 2016                             
--                                                                   
-- The source code for this program is not published or otherwise    
-- divested of its trade secrets, irrespective of what has been      
-- deposited with the U.S. Copyright Office.                         
--                                                                   
-- ***************************************************************** 

--------------------------------------
-- CONNECT TO SNCOMM
--------------------------------------
USE SNCOMM;
GO

--------------------------------------
-- CREATE THE SCHEMA
-- The CREATE SCHEMA command must be the first statement in a query batch, that is, must right after GO command
--------------------------------------
CREATE SCHEMA CALENDAR AUTHORIZATION dbo;
GO

USE SNCOMM;
GO

--------------------------------------
-- CREATE THE TABLES AND INDICES
--------------------------------------

CREATE VIEW CALENDAR.CA_USER AS
   SELECT MEMBER_UUID AS MEMBER_UUID, DIRECTORY_UUID AS DIRECTORY_UUID, DISPLAY AS DISPLAY, EMAIL AS EMAIL, STATE AS STATE, ORG_ID AS ORG_ID, ISEXTERNAL AS ISEXTERNAL
   FROM SNCOMM.MEMBERPROFILE; 
GO
   
BEGIN TRANSACTION;

--------------------------------------
-- Schema info

CREATE TABLE CALENDAR.CA_SCHEMA (
	COMPKEY		NVARCHAR(36)	NOT NULL,
    DBSCHEMAVER	NVARCHAR(32)	NOT NULL,
	RELEASEVER  NVARCHAR(32) NOT NULL,
	PRESCHEMAVER NVARCHAR( 10 ) DEFAULT '0' NOT NULL,
    POSTSCHEMAVER NVARCHAR( 10 ) DEFAULT '0' NOT NULL
);

--------------------------------------
-- Calendar info
   
CREATE TABLE CALENDAR.CA_MEMBERSHIP(
	CALENDAR_UUID	NVARCHAR(36)	    NOT NULL,
	MEMBER_UUID		NVARCHAR(36)		NOT NULL,
	ROLE			INTEGER				NOT NULL, -- 1: member, 2: owner
	ORG_ID          NVARCHAR(36)        NOT NULL
);

CREATE TABLE CALENDAR.CA_CALENDAR (
	CALENDAR_UUID	NVARCHAR(36)	    NOT NULL,
	COMMUNITY_UUID	NVARCHAR(36)	    NOT NULL,
	COMMUNITY_NAME  NVARCHAR(256)		NOT NULL,
	MEMBERS_ROLE    INTEGER        		DEFAULT 1 NOT NULL,
	VISIBILITY      INTEGER        		NOT NULL, -- 0: private, 1: public/moderated
	LAST_MODIFIED   DATETIME			NOT NULL,
	CREATEDON		DATETIME			DEFAULT CURRENT_TIMESTAMP NOT NULL,
	ACLMODTIME		DATETIME			DEFAULT CURRENT_TIMESTAMP NOT NULL,
	WIDGETID		NVARCHAR(48),
	ORG_ID          NVARCHAR(36)        NOT NULL
);
CREATE INDEX CA_CAL_ACLMODTIME_IDX ON CALENDAR.CA_CALENDAR(ACLMODTIME, CREATEDON, ORG_ID);
CREATE INDEX CA_CAL_VISIBILITY_IDX ON CALENDAR.CA_CALENDAR(CALENDAR_UUID, VISIBILITY, ORG_ID);

CREATE TABLE CALENDAR.CA_EVENT (
	EVENT_UUID		NVARCHAR(36)	NOT NULL,
	CALENDAR_UUID	NVARCHAR(36)	NOT NULL,
	MODIFIEDBY		NVARCHAR(36)	NOT NULL,
	CREATEDBY		NVARCHAR(36)	NOT NULL,
	MODIFIEDON		DATETIME		NOT NULL,
	CREATEDON		DATETIME		NOT NULL,
	DFLTEVENTINFO	NVARCHAR(36)	NOT NULL,
	ISRECURRENCE    BIT				DEFAULT 0 NOT NULL,
	DBMODTIME		DATETIME,
	ORG_ID          NVARCHAR(36)    NOT NULL
);
CREATE INDEX CA_EV_CALID_IDX ON CALENDAR.CA_EVENT(CALENDAR_UUID, CREATEDON DESC, ORG_ID);
CREATE INDEX CA_EV_USERID_IDX ON CALENDAR.CA_EVENT(CREATEDBY, CREATEDON DESC, ORG_ID);
CREATE INDEX CA_EV_CALID_USERID_IDX ON CALENDAR.CA_EVENT(CALENDAR_UUID, CREATEDBY, CREATEDON DESC, ORG_ID);
CREATE INDEX CA_EV_MODITIME_IDX ON CALENDAR.CA_EVENT(MODIFIEDON, ORG_ID);
CREATE INDEX CA_EV_DBMODTIME_IDX ON CALENDAR.CA_EVENT(DBMODTIME, ORG_ID);

CREATE TABLE CALENDAR.CA_EVENTINSTANCE (
	EVENTINST_UUID  NVARCHAR(36) 	NOT NULL,
	CALENDAR_UUID	NVARCHAR(36)	NOT NULL,
	EVENT_UUID		NVARCHAR(36)	NOT NULL,
	EVENTINFO_UUID	NVARCHAR(36),
	STARTDATE		DATETIME		NOT NULL,
	ENDDATE			DATETIME		NOT NULL,
	MODIFIEDBY		NVARCHAR(36),
	MODIFIEDON		DATETIME,
	DBMODTIME		DATETIME,
	ORG_ID          NVARCHAR(36)    NOT NULL
);
CREATE INDEX CA_EVINST_CALID_EDSD_IDX ON CALENDAR.CA_EVENTINSTANCE(CALENDAR_UUID, ENDDATE, STARTDATE, ORG_ID);
CREATE INDEX CA_EVINST_CALID_EVID_IDX ON CALENDAR.CA_EVENTINSTANCE(CALENDAR_UUID, EVENT_UUID, ORG_ID);
CREATE INDEX CA_EVINST_EVID_SD_IDX ON CALENDAR.CA_EVENTINSTANCE(EVENT_UUID, STARTDATE, ORG_ID);
CREATE INDEX CA_EVINST_EVID_EDSD_IDX ON CALENDAR.CA_EVENTINSTANCE(EVENT_UUID, ENDDATE DESC, STARTDATE, ORG_ID);
CREATE INDEX CA_EVINST_ED_IDX ON CALENDAR.CA_EVENTINSTANCE(ENDDATE, ORG_ID);
CREATE INDEX CA_EVINST_DBMD_IDX ON CALENDAR.CA_EVENTINSTANCE(DBMODTIME, ORG_ID);
CREATE UNIQUE INDEX CA_EVINST_INST_EDSD_IDX ON CALENDAR.CA_EVENTINSTANCE(EVENTINST_UUID, ENDDATE, STARTDATE, ORG_ID);

CREATE TABLE CALENDAR.CA_SUBSTITUTION (
	SUBSTITUTION_UUID	NVARCHAR(36)	NOT NULL,
	CALENDAR_UUID		NVARCHAR(36)	NOT NULL,
	EVENT_UUID			NVARCHAR(36)	NOT NULL,
	STARTDATE			DATETIME		NOT NULL,
	ISCANCELLED			BIT				NOT NULL,
	EVENTINFO_UUID		NVARCHAR(36),
	NEWSTARTDATE		DATETIME,
	NEWENDDATE			DATETIME,
	MODIFIEDON			DATETIME		DEFAULT CURRENT_TIMESTAMP NOT NULL,
	ORG_ID              NVARCHAR(36)    NOT NULL
);
CREATE INDEX CA_SUB_CALID_IDX ON CALENDAR.CA_SUBSTITUTION(CALENDAR_UUID, ORG_ID);
CREATE INDEX CA_SUB_EVID_NSD_IDX ON CALENDAR.CA_SUBSTITUTION(EVENT_UUID, NEWSTARTDATE, ORG_ID);
CREATE INDEX CA_SUB_EVID_SD_IDX ON CALENDAR.CA_SUBSTITUTION(EVENT_UUID, STARTDATE, ORG_ID);
CREATE INDEX CA_SUB_MODITIME_IDX ON CALENDAR.CA_SUBSTITUTION(MODIFIEDON, EVENTINFO_UUID, ISCANCELLED, ORG_ID);

CREATE TABLE CALENDAR.CA_RECURRENCE (
	EVENT_UUID		NVARCHAR(36)	NOT NULL,
	CALENDAR_UUID	NVARCHAR(36)	NOT NULL,
	FREQUENCYCODE	NCHAR(1)		NOT NULL,
	INTERVAL		INTEGER,
	UNTILRULE		DATETIME,
	STARTDATE		DATETIME		NOT NULL,
	ENDDATE			DATETIME		NOT NULL,
	BYDAY			INTEGER,
	MODIFIEDON		DATETIME		DEFAULT CURRENT_TIMESTAMP NOT NULL,
	ORG_ID          NVARCHAR(36)    NOT NULL
);
CREATE INDEX CA_RECUR_CALID_IDX ON CALENDAR.CA_RECURRENCE(CALENDAR_UUID, ORG_ID);
CREATE INDEX CA_RECUR_MODITIME_IDX ON CALENDAR.CA_RECURRENCE(MODIFIEDON, ORG_ID);

CREATE TABLE CALENDAR.CA_EVENTINFO (
	EVENTINFO_UUID	NVARCHAR(36)	NOT NULL,
	CALENDAR_UUID	NVARCHAR(36)	NOT NULL,
	EVENT_UUID		NVARCHAR(36)	NOT NULL,
	DESCRIPTION	    NVARCHAR(MAX),
	LOCATION	    NVARCHAR(256),
	NAME		    NVARCHAR(256),
	ISALLDAY        BIT,
	IMAGE_URL		NVARCHAR(1024),
	ORG_ID          NVARCHAR(36)    NOT NULL
);
CREATE INDEX CA_EVINFO_CALID_IDX ON CALENDAR.CA_EVENTINFO(CALENDAR_UUID, ORG_ID);
CREATE INDEX CA_EVINFO_EVID_IDX ON CALENDAR.CA_EVENTINFO(EVENT_UUID, ORG_ID);

CREATE TABLE CALENDAR.CA_DELETION_HISTORY (
	DELHISTORY_UUID	NVARCHAR(36)	NOT NULL,
	CALENDAR_UUID	NVARCHAR(36)	NOT NULL,
	OBJECT_TYPE		INTEGER 		NOT NULL, -- 0 - EVENT, 1 - EXCEPTION INSTANCE
	OBJECT_UUID		NVARCHAR(36) 	NOT NULL,
	DBMODTIME		DATETIME		NOT NULL,
	ORG_ID          NVARCHAR(36)    NOT NULL
);
CREATE INDEX CA_DELHIS_TIME_IDX ON CALENDAR.CA_DELETION_HISTORY(DBMODTIME, ORG_ID);

CREATE TABLE CALENDAR.CA_EVENTTAG (
	TAG_UUID		NVARCHAR(36)	 NOT NULL,
	CALENDAR_UUID	NVARCHAR(36)	 NOT NULL,
	EVENT_UUID		NVARCHAR(36)	 NOT NULL,
	NAME	    	NVARCHAR(256) 	 NOT NULL,
	MODIFIEDON	    DATETIME	 	 NOT NULL,
	ORG_ID          NVARCHAR(36)     NOT NULL
);
CREATE INDEX CA_EVTAG_EVID_IDX ON CALENDAR.CA_EVENTTAG(EVENT_UUID, ORG_ID);
CREATE INDEX CA_EVTAG_CALID_IDX ON CALENDAR.CA_EVENTTAG(CALENDAR_UUID, NAME, ORG_ID);
CREATE INDEX CA_EVTAG_NAME_IDX ON CALENDAR.CA_EVENTTAG(NAME, CALENDAR_UUID, ORG_ID);
CREATE UNIQUE INDEX CA_EVTAG_NAME_EVID_IDX ON CALENDAR.CA_EVENTTAG(NAME, EVENT_UUID, ORG_ID);

CREATE TABLE CALENDAR.CA_EVENTTAGAGG (
	TAGAGG_UUID		NVARCHAR(36)	 NOT NULL,
	CALENDAR_UUID	NVARCHAR(36)     NOT NULL,
	NAME	    	NVARCHAR(256) 	 NOT NULL,
	TOTAL			INTEGER		 	 NOT NULL,
	LASTUSED	    DATETIME	 	 NOT NULL,
	ORG_ID          NVARCHAR(36)     NOT NULL
);
CREATE INDEX CA_EVTAGAGG_CALID_IDX ON CALENDAR.CA_EVENTTAGAGG(CALENDAR_UUID, TOTAL, ORG_ID);
CREATE UNIQUE INDEX CA_EVTAGAGG_CALID_NAME_IDX ON CALENDAR.CA_EVENTTAGAGG(CALENDAR_UUID, NAME, ORG_ID);

CREATE TABLE CALENDAR.CA_EVENTCOMMENT (
	COMMENT_UUID	NVARCHAR(36)	 NOT NULL,
	CALENDAR_UUID	NVARCHAR(36)	 NOT NULL,
	EVENT_UUID		NVARCHAR(36)	 NOT NULL,
	CREATEDBY		NVARCHAR(36)	 NOT NULL,
	CREATEON		DATETIME	 	 NOT NULL,
	CONTENT	    	NVARCHAR(MAX) 	 NOT NULL,
	CONTENTTYPE     INTEGER          DEFAULT 2 NOT NULL,
	ORG_ID          NVARCHAR(36)     NOT NULL
);
CREATE INDEX CA_EVCMT_EVID_IDX ON CALENDAR.CA_EVENTCOMMENT(EVENT_UUID, ORG_ID);

CREATE TABLE CALENDAR.CA_EVENTFOLLOWING (
    EVFLW_UUID		NVARCHAR(36)	 NOT NULL,
    CALENDAR_UUID	NVARCHAR(36)	 NOT NULL,
    EVENT_UUID		NVARCHAR(36)	 NOT NULL,
    EVENTITEM_UUID  NVARCHAR(36)  	 NOT NULL,
    EVENTITEM_TYPE	INTEGER	     	 NOT NULL, -- 0: event, 1: instance
    ENDDATE			DATETIME	 	 NOT NULL,
    USER_UUID		NVARCHAR(36)	 NOT NULL,
    FOLLOW   		INTEGER	     	 NOT NULL, -- event 'follow' type, 0x01: follow, 0x02: attend, 0x10: both attend and follow
    MODIFIEDON		DATETIME	 	 NOT NULL,
    ORG_ID          NVARCHAR(36)     NOT NULL
);
CREATE INDEX CA_EVFLW_CAID_IDX ON CALENDAR.CA_EVENTFOLLOWING(CALENDAR_UUID, ORG_ID);
CREATE INDEX CA_EVFLW_EVID_IDX ON CALENDAR.CA_EVENTFOLLOWING(EVENT_UUID, ORG_ID);
CREATE UNIQUE INDEX CA_EVFLW_EVITEM_IDX ON CALENDAR.CA_EVENTFOLLOWING(EVENTITEM_UUID, EVENTITEM_TYPE, USER_UUID, ORG_ID);
CREATE UNIQUE INDEX CA_EVFLW_USR_IDX ON CALENDAR.CA_EVENTFOLLOWING(USER_UUID, ENDDATE, EVFLW_UUID, ORG_ID) INCLUDE (FOLLOW, CALENDAR_UUID, EVENTITEM_UUID, EVENTITEM_TYPE);

CREATE TABLE CALENDAR.CA_MISCDATA (
    NAME          	NVARCHAR(256)  NOT NULL,
    VAL       		NVARCHAR(1024) NOT NULL,
    MODIFIEDON		DATETIME	   NOT NULL
);

CREATE TABLE CALENDAR.CA_USERMENTION (
    MENTION_UUID   NVARCHAR(48) NOT NULL,
    OBJECT_ID      NVARCHAR(48) NOT NULL,
    OBJECT_TYPE    INTEGER NOT NULL, -- 1: event, 2: instance, 3: comment
    CALENDAR_UUID  NVARCHAR(48) NOT NULL,
    USER_UUID      NVARCHAR(48) NOT NULL, 
    MENTIONEDBY    NVARCHAR(48) NOT NULL, 
    CREATEDON      DATETIME   NOT NULL,
    ORG_ID         NVARCHAR(36) NOT NULL
);
CREATE INDEX CA_UM_OBJECT_IDX on CALENDAR.CA_USERMENTION(OBJECT_ID, OBJECT_TYPE, ORG_ID);
CREATE INDEX CA_UM_USER_IDX on CALENDAR.CA_USERMENTION(USER_UUID, ORG_ID);

--------------------------------------
-- PKs
--------------------------------------

ALTER TABLE CALENDAR.CA_SCHEMA
ADD CONSTRAINT CA_SCHEMA_PK PRIMARY KEY (
	COMPKEY
);

ALTER TABLE CALENDAR.CA_MEMBERSHIP
ADD CONSTRAINT CA_MEMBERSHIP_PK PRIMARY KEY (
	MEMBER_UUID, CALENDAR_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_CALENDAR
ADD CONSTRAINT CA_CALENDAR_PK PRIMARY KEY (
	CALENDAR_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_RECURRENCE
ADD CONSTRAINT CA_RECURRENCE_PK PRIMARY KEY (
	EVENT_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_EVENT
ADD CONSTRAINT CA_EVENT_PK PRIMARY KEY (
	EVENT_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_EVENTINSTANCE
ADD CONSTRAINT CA_EVENTINST_PK PRIMARY KEY (
	EVENTINST_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_SUBSTITUTION
ADD CONSTRAINT CA_SUBSTITUTION_PK PRIMARY KEY (
	SUBSTITUTION_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_EVENTINFO
ADD CONSTRAINT CA_EVENTINFO_PK PRIMARY KEY (
	EVENTINFO_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_DELETION_HISTORY
ADD CONSTRAINT CA_DELHISTORY_PK PRIMARY KEY (
	DELHISTORY_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_EVENTTAG
ADD CONSTRAINT CA_EVTAG_PK PRIMARY KEY (
	TAG_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_EVENTTAGAGG
ADD CONSTRAINT CA_EVTAGAGG_PK PRIMARY KEY (
	TAGAGG_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_EVENTCOMMENT
ADD CONSTRAINT CA_EVCMT_PK PRIMARY KEY (
	COMMENT_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_EVENTFOLLOWING
ADD CONSTRAINT CA_EVFLW_PK PRIMARY KEY (
	EVFLW_UUID, ORG_ID
);

ALTER TABLE CALENDAR.CA_MISCDATA
ADD CONSTRAINT CA_MISCDATA_PK PRIMARY KEY (
	NAME
);

ALTER TABLE CALENDAR.CA_USERMENTION
ADD CONSTRAINT CA_USERMENTION_PK PRIMARY KEY (
	MENTION_UUID, ORG_ID
);

--------------------------------------
-- INSERTS
--------------------------------------

INSERT INTO CALENDAR.CA_SCHEMA (COMPKEY, DBSCHEMAVER, RELEASEVER, POSTSCHEMAVER) VALUES ('CALENDAR', '40', '6.0.0.0.0', '40.0');

COMMIT;
